
dungeon.h,24
# define DUNGEON_H2,18

heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,1640
#define htobe16(14,241
#define htole16(15,284
#define be16toh(16,330
#define le16toh(17,373
#define htobe32(19,420
#define htole32(20,463
#define be32toh(21,509
#define le32toh(22,552
#define htobe64(24,599
#define htole64(25,642
#define be64toh(26,688
#define le64toh(27,731
# define rand_under(31,891
# define rand_range(35,1034
typedef struct corridor_path 37,1108
} corridor_path_t;44,1340
typedef enum dim 46,1360
  dim_x,47,1379
  dim_y,48,1388
  num_dims49,1397
} dim_t;50,1408
typedef int16_t pair_t[pair_t52,1418
#define DUNGEON_X 54,1453
#define DUNGEON_Y 55,1487
#define MIN_ROOMS 56,1521
#define MAX_ROOMS 57,1554
#define ROOM_MIN_X 58,1587
#define ROOM_MIN_Y 59,1620
#define ROOM_MAX_X 60,1653
#define ROOM_MAX_Y 61,1687
#define mappair(63,1721
#define mapxy(64,1778
#define hardnesspair(65,1813
#define hardnessxy(66,1880
typedef enum __attribute__ ((__packed__)) terrain_type 68,1926
  ter_debug,69,1983
  ter_wall,70,1996
  ter_wall_immutable,71,2008
  ter_floor,72,2030
  ter_floor_room,73,2043
  ter_floor_hall,74,2061
} terrain_type_t;75,2079
typedef struct room 77,2098
} room_t;82,2194
typedef struct dungeon 84,2205
} dungeon_t;97,2974
static int32_t corridor_path_cmp(99,2988
static void dijkstra_corridor(105,3251
static int connect_two_rooms(211,7654
static int connect_rooms(229,8305
static int empty_dungeon(240,8478
static int place_rooms(259,8877
static int make_rooms(296,10064
int gen_dungeon(330,10851
void render_dungeon(356,11223
void delete_dungeon(383,11754
void init_dungeon(387,11793
int save(392,11850
int read(487,14704
int main(561,16582
